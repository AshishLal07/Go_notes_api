version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: notes_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: notes_db
      MYSQL_USER: notes_user
      MYSQL_PASSWORD: rootpassword
    ports:
      - "${DB_PORT:-3307}:3307"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - notes_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Notes API Application
  notes-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notes_api
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    environment:
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: notes_user
      DB_PASSWORD: rootpassword
      DB_NAME: notes_db

      # JWT configuration
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production-make-it-long-and-random
      JWT_EXPIRATION_HOURS: 24

      # Application configuration
      PORT: 8080
      ENV: ${ENV:-development}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - notes_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

      # Database Seeder (runs once to populate sample data)
  seeder:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notes_seeder
    environment:
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-notes_user}
      DB_PASSWORD: ${DB_PASSWORD:-notes_password}
      DB_NAME: ${DB_NAME:-notes_db}

      # Seeder configuration
      SEED_ON_START: ${SEED_ON_START:-true}
    command: ["./seed"]
    depends_on:
      mysql:
        condition: service_healthy
      notes-api:
        condition: service_healthy
    networks:
      - notes_network
    restart: "no" # Run only once
    profiles:
      - seed # Optional profile, can be enabled/disabled

  # Adminer (Database Management Tool) - Optional
  adminer:
    image: adminer:latest
    container_name: notes_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - notes_network
    profiles:
      - tools

volumes:
  mysql_data:
    driver: local

networks:
  notes_network:
    driver: bridge
